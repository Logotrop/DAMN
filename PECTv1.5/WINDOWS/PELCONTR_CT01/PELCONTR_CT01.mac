[PCOMM SCRIPT HEADER]
LANGUAGE=VBSCRIPT
DESCRIPTION=
[PCOMM SCRIPT SOURCE]
OPTION EXPLICIT
autECLSession.SetConnectionByName(ThisSessionName)

dim filesys, demofolder, filetxt , counter, control, myNAME, myPASSWORD
dim objShell, objFSO, objFile, CurrentDayOfYear, TwoDaysBeforeCurrentDay, CurrentYear
dim TwoLastDigitsOfCurrentYear, Var2, check, x, ThreeDaysBeforeCurrentDay, Var3
dim check_under_42_var, specific_check_output_a, Check_Error
dim check_under_42_b_1, check_under_42_b_2, check_under_42_b_3, specific_check_output_b
dim Check_Error_PELEH, Check_Error_PELEG, OneDayBeforeCurrentDay, Var1
dim Var_test1, Var_test2, Var_test3, Var_test4
dim CurrentDate, YesterdaysDate, TwoDaysAgoDate, ThreeDaysAgoDate
dim CurrentDateThreeDigits, YesterdaysDateThreeDigits, TwoDaysAgoThreeDigits, ThreeDaysAgoThreeDigits
dim todayyear, yesterdayyear, twodaysagoyear, threedaysagoyear
dim FinalFormYearAndDateToday, FinalFormYearAndDateYesterday, FinalFormYearAndDateTwoDaysAgo, FinalFormYearAndDateThreeDaysAgo

Set objShell = CreateObject ("Wscript.shell")
Const ForReading = 1

REM This will use a variable to store the current path.Next line will delete the text if it exists
Dim sCurPath
sCurPath = CreateObject("Scripting.FileSystemObject").GetAbsolutePathName("..")

REM Creating file object that will read the specified file
Set objFSO = CreateObject("Scripting.FileSystemObject")
Set objFile = objFSO.OpenTextFile(sCurPath+"\Variables.txt", ForReading)
myNAME = objFile.ReadLine
myPASSWORD = objFile.ReadLine
objFile.Close



CurrentDate = DateAdd("d",0,Date) REM This will give Ex. 3/25/2019
YesterdaysDate = DateAdd("d",-1,Date) REM This will give Ex. 3/24/2019
TwoDaysAgoDate = DateAdd("d",-2,Date) REM This will give Ex. 3/23/2019
ThreeDaysAgoDate = DateAdd("d",-3,Date) REM This will give Ex. 3/22/2019

REM This will give the day in a number of (1-365).It will not give the number as 3 digit format.
CurrentDateThreeDigits = DatePart("y",CurrentDate) 
YesterdaysDateThreeDigits = DatePart("y",YesterdaysDate)
TwoDaysAgoThreeDigits = DatePart("y",TwoDaysAgoDate)
ThreeDaysAgoThreeDigits = DatePart("y",ThreeDaysAgoDate)

REM Here we calculate the year and date for the current day and we generate the final form FinalFormYearAndDateToday
If LEN(CurrentDateThreeDigits) = 1 Then
	CurrentDateThreeDigits = (0&(0&CurrentDateThreeDigits))
Elseif LEN(CurrentDateThreeDigits) = 2 Then
	CurrentDateThreeDigits = (0&CurrentDateThreeDigits)
Else
	CurrentDateThreeDigits = (CurrentDateThreeDigits)
End If
If LEN(CurrentDate) = 8 Then
	todayyear = Mid(CurrentDate,7)
Elseif LEN(CurrentDate) = 9 Then
	todayyear = Mid(CurrentDate,8)
Elseif LEN(CurrentDate) = 10 Then
	todayyear = Mid(CurrentDate,9)
End If



REM Here we calculate the year and date for yesterday and we generate the final form FinalFormYearAndDateYesterday 
If LEN(YesterdaysDateThreeDigits) = 1 Then
	YesterdaysDateThreeDigits = (0&(0&YesterdaysDateThreeDigits))
Elseif LEN(YesterdaysDateThreeDigits) = 2 Then
	YesterdaysDateThreeDigits = (0&YesterdaysDateThreeDigits)
Else
	YesterdaysDateThreeDigits = (YesterdaysDateThreeDigits)
End If
If LEN(YesterdaysDate) = 8 Then
	yesterdayyear = Mid(YesterdaysDate,7)
Elseif LEN(YesterdaysDate) = 9 Then
	yesterdayyear = Mid(YesterdaysDate,8)
Elseif LEN(YesterdaysDate) = 10 Then
	yesterdayyear = Mid(YesterdaysDate,9)
End If


REM Here we calculate the year and date for two days ago and we generate the final form FinalFormYearAndDateTwoDaysAgo 
If LEN(TwoDaysAgoThreeDigits) = 1 Then
	TwoDaysAgoThreeDigits = (0&(0&TwoDaysAgoThreeDigits))
Elseif LEN(TwoDaysAgoThreeDigits) = 2 Then
	TwoDaysAgoThreeDigits = (0&TwoDaysAgoThreeDigits)
Else
	TwoDaysAgoThreeDigits = (TwoDaysAgoThreeDigits)
End If
If LEN(TwoDaysAgoDate) = 8 Then
	twodaysagoyear = Mid(TwoDaysAgoDate,7)
Elseif LEN(TwoDaysAgoDate) = 9 Then
	twodaysagoyear = Mid(TwoDaysAgoDate,8)
Elseif LEN(TwoDaysAgoDate) = 10 Then
	twodaysagoyear = Mid(TwoDaysAgoDate,9)
End If


REM Here we calculate the year and date for three days ago and we generate the final form FinalFormYearAndDateThreeDaysAgo 
If LEN(ThreeDaysAgoThreeDigits) = 1 Then
	ThreeDaysAgoThreeDigits = (0&(0&ThreeDaysAgoThreeDigits))
Elseif LEN(ThreeDaysAgoThreeDigits) = 2 Then
	ThreeDaysAgoThreeDigits = (0&ThreeDaysAgoThreeDigits)
Else
	ThreeDaysAgoThreeDigits = (ThreeDaysAgoThreeDigits)
End If
If LEN(ThreeDaysAgoDate) = 8 Then
	threedaysagoyear = Mid(ThreeDaysAgoDate,7)
Elseif LEN(ThreeDaysAgoDate) = 9 Then
	threedaysagoyear = Mid(ThreeDaysAgoDate,8)
Elseif LEN(ThreeDaysAgoDate) = 10 Then
	threedaysagoyear = Mid(ThreeDaysAgoDate,9)
End If


FinalFormYearAndDateToday = todayyear&CurrentDateThreeDigits
FinalFormYearAndDateYesterday = yesterdayyear&YesterdaysDateThreeDigits
FinalFormYearAndDateTwoDaysAgo = twodaysagoyear&TwoDaysAgoThreeDigits
FinalFormYearAndDateThreeDaysAgo = threedaysagoyear&ThreeDaysAgoThreeDigits



REM This line calls the macro subroutine
test
sub test
    autECLSession.autECLOIA.WaitForAppAvailable

    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.WaitForCursor 23,10,10000
    autECLSession.autECLPS.SendKeys "bcp"
    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.SendKeys "[enter]"
    autECLSession.autECLOIA.WaitForAppAvailable
    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.WaitForCursor 17,50,10000
    autECLSession.autECLPS.SendKeys myNAME
    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.SendKeys "[tab]"
    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.SendKeys myPASSWORD
    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.SendKeys "[enter]"
    autECLSession.autECLOIA.WaitForAppAvailable
    autECLSession.autECLOIA.WaitForInputReady
    Check_Error=autECLSession.autECLPS.GetText(04, 02, 3)
    if Check_Error="EMS" Then
        msgbox "Problem with your Account.The script will end"
        exit sub
    end if
    REM Create the text file
    Set filesys = CreateObject("Scripting.FileSystemObject")
    Set demofolder = filesys.GetFolder(sCurPath)
    Set filetxt = demofolder.CreateTextFile("\PELCONTR_CT01\PELCONTR_CT01.txt", True)
    filetxt.WriteLine("44: CT01 PELB2 1.3 Flux xxxx en statut A")
    autECLSession.autECLPS.SendKeys "lf 44"
    autECLSession.autECLPS.SendKeys "[enter]"
    autECLSession.autECLPS.SendKeys "44"
    autECLSession.autECLPS.SendKeys "[enter]"
    autECLSession.autECLOIA.WaitForInputReady
    autECLSession.autECLPS.WaitForCursor 04,14,10000
    Check_Pelican_44_1_3_For_Status_A
    filetxt.WriteLine("44: CT01 PELB2 1.3 Flux xxxx en statut 9")
    Check_Pelican_44_1_3_For_Status_9
    filetxt.WriteLine("44: CT01 PELB2 1.1 Flux xxxx en statut A")
    Check_Pelican_44_1_1_For_Status_A
    filetxt.WriteLine("44: CT01 PELB2 1.1 Flux xxxx en statut 9")
    Check_Pelican_44_1_1_For_Status_9
    autECLSession.autECLPS.SendKeys "x"
    autECLSession.autECLPS.SendKeys "[enter]"
    autECLSession.autECLPS.SendKeys "[pf3]"


    filetxt.Close

end sub
REM -------------------------------------------------------------------------------------
REM Below this line there are defined all the functions
REM -------------------------------------------------------------------------------------


sub Check_Pelican_44_1_3_For_Status_A
   autECLSession.autECLPS.SendKeys "1.3"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 06,23,10000
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLPS.SendKeys FinalFormYearAndDateThreeDaysAgo 
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLPS.SendKeys "A"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 05,02,10000

   check = autECLSession.autECLPS.GetText(24, 02, 41)
   If check = "PAS D'ENREGISTREMENT POUR VOTRE SELECTION" Then
        Var_test1=0
        filetxt.WriteLine("No flux in the specified status")
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   Else
        Do
            Var_test1=1
            autECLSession.autECLPS.SendKeys "[pf8]"
            x = autECLSession.autECLPS.GetText(20, 35, 12)
            For counter=5 to 19 step 1
                control = autECLSession.autECLPS.GetText(counter, 2, 75)
                filetxt.WriteLine(control)
            Next

        Loop Until x = "FIN DE LISTE"
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   End If
end sub

sub Check_Pelican_44_1_3_For_Status_9
   autECLSession.autECLPS.SendKeys "1.3"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 06,23,10000
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLPS.SendKeys FinalFormYearAndDateTwoDaysAgo 
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys FinalFormYearAndDateYesterday 
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "9"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 05,02,10000

   check = autECLSession.autECLPS.GetText(24, 02, 41)
   If check = "PAS D'ENREGISTREMENT POUR VOTRE SELECTION" Then
        Var_test2=0
        filetxt.WriteLine("No flux in the specified status")
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   Else
        Do
            Var_test2=1
            autECLSession.autECLPS.SendKeys "[pf8]"
            x = autECLSession.autECLPS.GetText(20, 35, 12)
            For counter=5 to 19 step 1
                control = autECLSession.autECLPS.GetText(counter, 2, 75)
                filetxt.WriteLine(control)
            Next

        Loop Until x = "FIN DE LISTE"
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   End If
end sub

sub Check_Pelican_44_1_1_For_Status_A
   autECLSession.autECLPS.SendKeys "1.1"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 06,30,10000
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLPS.SendKeys FinalFormYearAndDateThreeDaysAgo 
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLPS.SendKeys "A"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 05,02,10000

   check = autECLSession.autECLPS.GetText(24, 02, 41)
   If check = "PAS D'ENREGISTREMENT POUR VOTRE SELECTION" Then
        Var_test3=0
        filetxt.WriteLine("No flux in the specified status")
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   Else
        Do
            Var_test3=1
            autECLSession.autECLPS.SendKeys "[pf8]"
            x = autECLSession.autECLPS.GetText(20, 35, 12)
            For counter=5 to 19 step 1
                control = autECLSession.autECLPS.GetText(counter, 2, 75)
                filetxt.WriteLine(control)
            Next

        Loop Until x = "FIN DE LISTE"
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   End If
end sub

sub Check_Pelican_44_1_1_For_Status_9
   autECLSession.autECLPS.SendKeys "1.1"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 06,30,10000
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLPS.SendKeys FinalFormYearAndDateTwoDaysAgo 
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys FinalFormYearAndDateYesterday 
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "[tab]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.SendKeys "9"
   autECLSession.autECLPS.SendKeys "[enter]"
   autECLSession.autECLOIA.WaitForInputReady
   autECLSession.autECLPS.WaitForCursor 05,02,10000

   check = autECLSession.autECLPS.GetText(24, 02, 41)
   If check = "PAS D'ENREGISTREMENT POUR VOTRE SELECTION" Then
        Var_test4=0
        filetxt.WriteLine("No flux in the specified status")
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   Else
        Do
            Var_test4=1
            autECLSession.autECLPS.SendKeys "[pf8]"
            x = autECLSession.autECLPS.GetText(20, 35, 12)
            For counter=5 to 19 step 1
                control = autECLSession.autECLPS.GetText(counter, 2, 75)
                filetxt.WriteLine(control)
            Next

        Loop Until x = "FIN DE LISTE"
        autECLSession.autECLPS.SendKeys "[pf3]"
        autECLSession.autECLPS.SendKeys "[pf3]"
   End If
end sub

If Var_test1 + Var_test2 + Var_test3 + Var_test4 <> 0 Then
    msgbox "Flux found. Check output in PECT, tab PELCONTR-CT01"
End If

REM With this we terminate the session
objShell.Run("cmd /C PCOMSTOP /S=Y")